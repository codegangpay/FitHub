<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.fithub.chat.model.dao.ChatDao">

    <insert id="createChatRoom">
    	insert into chat_room values(chat_room_seq.nextval, #{memberId}, 1, 0)
    </insert>
    
    <select id="chatRoomList" resultType="chatRoom">
    	SELECT cr.*, 
       m.member_thumb,
       m.member_level,
       (SELECT COUNT(*) 
        FROM chat_message cm 
        WHERE cm.chat_member_id = cr.chat_member_id 
          AND cm.is_read = 1) AS unread_count,
       (SELECT message_content
        FROM (
            SELECT chat_room_no, message_content
            FROM chat_message
            ORDER BY message_date DESC
        ) cmm
        WHERE cmm.chat_room_no = cr.chat_room_no 
          AND ROWNUM = 1) AS last_message,
       (SELECT message_date
        FROM (
            SELECT chat_room_no, message_date
            FROM chat_message
            ORDER BY message_date DESC
        ) cmm
        WHERE cmm.chat_room_no = cr.chat_room_no 
          AND ROWNUM = 1) AS last_date
FROM chat_room cr
LEFT JOIN member m ON cr.chat_member_id = m.member_id
WHERE m.member_level = 2 -- ✅ member_level이 2인 회원만
  AND EXISTS (
    SELECT 1
    FROM (
        SELECT chat_room_no, message_content
        FROM chat_message
        ORDER BY message_date DESC
    ) cmm
    WHERE cmm.chat_room_no = cr.chat_room_no AND cmm.message_content IS NOT NULL
)
ORDER BY last_date DESC
    </select>
    
    <select id="loadChatMessage" resultType="chatMessage">
		<!-- SELECT 
    cm.*,
    m.member_level,
    m.warning_level,
    m.member_thumb
FROM 
    chat_message cm
JOIN 
    member m ON cm.chat_member_id = m.member_id
WHERE 
    cm.chat_room_no = #{chatRoomNo}
    order by message_date -->
    SELECT *
FROM (
    SELECT 
        cm.*,
        m.member_level,
        m.warning_level,
        m.member_thumb
    FROM 
        chat_message cm
    JOIN 
        member m ON cm.chat_member_id = m.member_id
    WHERE 
        cm.chat_room_no = #{chatRoomNo}
    ORDER BY 
        cm.message_date DESC
)
WHERE ROWNUM &lt;= 30
ORDER BY message_date
    </select>
    	
    <select id="loadChatMember" resultType="chatMessage">
    	SELECT 
  cm.*, 
  m.member_id, 
  m.member_name, 
  m.member_thumb
FROM 
  chat_message cm
JOIN 
  member m 
ON 
  cm.chat_member_id = m.member_id
WHERE 
  cm.chat_room_no IN (
    SELECT chat_room_no
    FROM chat_message
    WHERE chat_member_id = #{memberId}
  )
ORDER BY 
  cm.message_date
    </select>
    
    <select id="selectChatRoom" resultType="chatRoom">
    	select chat_room_no from chat_room where chat_member_id = #{memberId}
    </select>
    
    <update id="viewOk">
    	update chat_message set is_read = 2 where chat_room_no = #{chatRoomNo} and not chat_member_id = #{chatMemberId}
    </update>
    
    <insert id="inputChatMessage">
    	insert into chat_message values(chat_message_seq.nextval, #{chatRoomNo}, #{chatMemberId}, #{messageContent}, TO_DATE(TO_CHAR(CURRENT_TIMESTAMP, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS'), 1)
    </insert>

    
</mapper>
